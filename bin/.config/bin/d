#!/usr/bin/env bash

# Get argument for script key/name, default to build
BUILD_SCRIPT="${1:-dev}"

# First, check if the jq command is available
# AND there is a package.json file in the current directory
if command -v jq &>/dev/null && [[ -f "package.json" ]]; then
  # if we have jq,
  # then use it to extract the first occurence of a key in package.json's scripts object
  # that starts with the argument passed in (or build)
  BUILD_SCRIPT="$(jq \
    -r \
    --arg ds "$BUILD_SCRIPT" \
    'first(.scripts | keys[] | select(. | test("^\($ds)[^\"]*")))' \
    package.json)"
  # if this didn't match anything, fallback to build
  BUILD_SCRIPT="${BUILD_SCRIPT:-build}"
fi

if [ -f package-lock.json ]; then
  echo "npm run $BUILD_SCRIPT"
  npm run "$BUILD_SCRIPT"
fi

if [ -f yarn.lock ]; then
  echo "yarn $BUILD_SCRIPT"
  yarn "$BUILD_SCRIPT"
fi

if [ -f pnpm-lock.yaml ]; then
  echo "pnpm run $BUILD_SCRIPT"
  pnpm run "$BUILD_SCRIPT"
fi

if [ -f bun.lockb ]; then
  echo "bun run $BUILD_SCRIPT"
  bun run "$BUILD_SCRIPT"
fi
